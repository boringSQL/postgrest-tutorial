CREATE TABLE users (
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email text NOT NULL UNIQUE,
    manager_id int REFERENCES users(user_id),
    created_at timestamp with time zone DEFAULT current_timestamp,
    deleted_at timestamp with time zone
);

CREATE ROLE time_off_anonymous NOLOGIN;
GRANT SELECT, INSERT, UPDATE ON users TO time_off_anonymous;
GRANT time_off_anonymous TO CURRENT_USER;

CREATE TABLE leave_types (
    leave_type_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    label text NOT NULL,
    description text,
    max_days int,
    created_at timestamp with time zone DEFAULT current_timestamp,
    deleted_at timestamp with time zone
);

CREATE TABLE time_off_transactions (
    transaction_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at timestamp with time zone DEFAULT current_timestamp,
    user_id int NOT NULL REFERENCES users(user_id),
    leave_type_id int NOT NULL REFERENCES leave_types(leave_type_id),
	transaction_date date,
	time_off_period daterange,
    amount int NOT NULL,
    description text
);

CREATE INDEX transaction_for_user ON time_off_transactions(user_id);

GRANT SELECT, INSERT, UPDATE ON leave_types TO time_off_anonymous;
GRANT SELECT, INSERT, UPDATE ON time_off_transactions TO time_off_anonymous;



